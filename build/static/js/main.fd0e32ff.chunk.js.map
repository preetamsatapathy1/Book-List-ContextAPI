{"version":3,"sources":["redux/actionType.js","components/BookForm.js","redux/action.js","components/BookList.js","components/Navbar.js","redux/reducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_BOOK","REMOVE_BOOK","connect","state","books","dispatch","addBook","name","author","book","type","payload","id","uuid","props","useState","setBook","setAuthor","className","onChange","e","target","value","placeholder","onClick","console","log","removeBook","map","length","initialState","store","createStore","action","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAAaA,EAAW,WACXC,EAAc,cCmCZC,eAZS,SAAAC,GACpB,MAAM,CACFC,MAAOD,MAIY,SAAAE,GACvB,MAAM,CACFC,QAAS,SAACC,EAAKC,GAAN,OAAiBH,EC5BX,SAACI,EAAKD,GACzB,MAAM,CACFE,KAAKV,EACLW,QAAQ,CACJF,KAAKA,EACLD,OAAOA,EACPI,GAAIC,gBDsB2BP,CAAQC,EAAKC,QAIzCN,EAhCE,SAACY,GAAW,IAAD,EAEAC,mBAAS,IAFT,mBAEjBN,EAFiB,KAEXO,EAFW,OAGID,mBAAS,IAHb,mBAGjBP,EAHiB,KAGTS,EAHS,KAWxB,OACI,sBAAKC,UAAU,OAAf,UACI,uBAAOR,KAAK,OAAOS,SAAU,SAACC,GAAD,OAAOJ,EAAQI,EAAEC,OAAOC,QAAQA,MAAOb,EAAMc,YAAY,cACtF,uBAAOb,KAAK,OAAOS,SAAU,SAACC,GAAD,OAAOH,EAAUG,EAAEC,OAAOC,QAAQA,MAAOd,EAAQe,YAAY,gBAC1F,wBAAQL,UAAU,SAASM,QAXd,WACjBC,QAAQC,IAAIjB,EAAKD,GACjBM,EAAMR,QAAQG,EAAKD,GACnBQ,EAAQ,IACRC,EAAU,KAON,0BEmBGf,eAZS,SAACC,GACrB,MAAM,CACFC,MAAMD,MAIa,SAAAE,GACvB,MAAM,CACFsB,WAAY,SAACf,GAAD,OAAQP,EDnBF,SAAAO,GACtB,MAAM,CACFF,KAAMT,EACNU,QAAS,CACLC,GAAGA,ICesBe,CAAWf,QAIjCV,EAnCE,SAACY,GAKd,OACI,qBAAKI,UAAU,YAAf,SACI,6BAEIJ,EAAMV,MAAMwB,KAAI,SAAAnB,GACZ,OACA,qBAAkBe,QAAS,kBAVrBZ,EAUwCH,EAAKG,QAT/DE,EAAMa,WAAWf,GADA,IAACA,GAUN,UACI,qBAAKM,UAAU,QAAf,SAAwBT,EAAKA,OAC7B,qBAAKS,UAAU,SAAf,SAAyBT,EAAKD,WAFzBC,EAAKG,cCGnBV,eANS,SAAAC,GACpB,MAAM,CACFC,MAAMD,KAICD,EAfA,SAACY,GACZ,OACI,sBAAKI,UAAU,UAAf,UACI,oDACA,qDAAwBJ,EAAMV,MAAMyB,OAApC,oB,QCLRC,EAAe,CACf,CAAClB,GAAG,EAAGH,KAAO,SAAWD,OAAO,YAChC,CAACI,GAAG,EAAGH,KAAO,SAAUD,OAAQ,a,OCErBuB,EAFDC,aDGS,WAAmC,IAAlC7B,EAAiC,uDAAzB2B,EAAcG,EAAW,uCACrD,OAAOA,EAAOvB,MACV,KAAKV,EACD,MAAM,GAAN,mBAAWG,GAAX,CAAkB8B,EAAOtB,UAC7B,KAAKV,EACD,OAAOE,EAAM+B,QAAO,SAAAzB,GAAI,OAAIA,EAAKG,KAAOqB,EAAOtB,QAAQC,MAC3D,QACI,OAAOT,M,MEQJgC,MAbf,WACE,OACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,sBAAKb,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCFOkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fd0e32ff.chunk.js","sourcesContent":["export const ADD_BOOK = 'BUY_BOOK';\r\nexport const REMOVE_BOOK = 'REMOVE_BOOK';","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {addBook} from '../redux/action'\r\n\r\nconst BookForm = (props) => {\r\n\r\n    const [book, setBook] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const handleSubmit = () => {\r\n        console.log(book,author)\r\n        props.addBook(book,author);\r\n        setBook('');\r\n        setAuthor('')\r\n    }\r\n\r\n    return ( \r\n        <div className='form'>\r\n            <input type=\"text\" onChange={(e) => setBook(e.target.value)} value={book} placeholder='Book Name'/>\r\n            <input type=\"text\" onChange={(e) => setAuthor(e.target.value)} value={author} placeholder='Author Name'/>\r\n            <button className='submit' onClick={handleSubmit}>Submit</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        books: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        addBook: (name,author) => dispatch(addBook(name,author))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookForm);","import { v1 as uuid } from \"uuid\";\r\nimport { ADD_BOOK, REMOVE_BOOK } from \"./actionType\";\r\n\r\n\r\nexport const addBook = (book,author) => {\r\n    return{\r\n        type:ADD_BOOK,\r\n        payload:{\r\n            book:book,\r\n            author:author,\r\n            id: uuid()\r\n        }\r\n    }\r\n} \r\n\r\nexport const removeBook = id =>{\r\n    return{\r\n        type: REMOVE_BOOK,\r\n        payload: {\r\n            id:id\r\n        }\r\n    }\r\n}","import { connect } from \"react-redux\";\r\nimport { removeBook } from \"../redux/action\";\r\n\r\nconst BookList = (props) => {\r\n    const handleRemove = (id) => {\r\n        props.removeBook(id)\r\n    }\r\n\r\n    return ( \r\n        <div className='book-list'>\r\n            <ul>\r\n            {\r\n                props.books.map(book => {\r\n                    return(\r\n                    <li key={book.id} onClick={() => handleRemove(book.id)}>\r\n                        <div className='title'>{book.book}</div>\r\n                        <div className='author'>{book.author}</div>\r\n                    </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n        </div>\r\n     );\r\n}\r\n \r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        books:state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        removeBook: (id) => dispatch(removeBook(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);","import { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    return ( \r\n        <div className='nav-bar'>\r\n            <h1>Ninja Reading List</h1>\r\n            <p> Currently you have {props.books.length} books. </p>\r\n        </div>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        books:state\r\n    }\r\n}\r\n \r\nexport default connect (mapStateToProps)(Navbar);","import { ADD_BOOK, REMOVE_BOOK } from \"./actionType\";\r\nlet initialState = [\r\n    {id:1, book : 'Book 1' , author:'Author 1'},\r\n    {id:2, book : 'Book 2', author: 'Author 2'}\r\n]\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_BOOK: \r\n            return [...state, action.payload]\r\n        case REMOVE_BOOK:\r\n            return state.filter(book => book.id !== action.payload.id)\r\n        default:\r\n            return state\r\n    }\r\n}","import { reducer } from \"./reducer\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import BookForm from \"./components/BookForm\";\nimport BookList from \"./components/BookList\";\nimport Navbar from \"./components/Navbar\";\nimport React from 'react';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\nimport './App.css'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Navbar />\n        <BookList />\n        <BookForm />\n      </div>\n    </Provider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}